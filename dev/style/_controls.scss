// _controls.scss
// mixin [start]
@mixin horizontal-vertical-center {
	left: 50%;
	top: 50%;
    -webkit-transform: translate(-50%, -50%);
    -ms-transform: translate(-50%, -50%);
    transform: translate(-50%, -50%);
}
// minin [end]

// style the controls containter
$controlsHeight : 40px;

// $prefix : ".onlyhtml5video-";  <style.scss>
#{$prefix}controls {
	position: relative;
	display: block;
	
	width: 100%;
  	text-align: center; // center the content of the container

	margin-top:  -$controlsHeight;
	height: $controlsHeight;

	*, *:before, *:after {
		-webkit-box-sizing: border-box; -moz-box-sizing: border-box; box-sizing: border-box;
	}
}

// style the elements in controls
$controlNormalColor : #fff;
$controlHoverColor : rgb(0, 204, 255); //#00CCFF
$controlInactiveColor : rgb(102, 153, 153);//#669999
$controlbackgroundColor : rgba(0,0,0,0.5);

$buttonHeight : $controlsHeight;
$_btH : $buttonHeight; //short name

$transitionSeconds : 0.8s;
$_tSec : $transitionSeconds; // short name

#{$prefix}{

	// play and pause button
	&play-button {
		position: relative;
		margin: 0;
		width: $_btH;
		height: $_btH;
		cursor: pointer;

		display:inline-block;
		background: $controlbackgroundColor;
		transition: border-width 0s;
		//Triangle in the play button
		&.play{
			&:before{
				content: "";
				position: absolute;
				// draw the triangle
				border-left:  ($_btH/2) solid $controlNormalColor;
				border-top: ($_btH/3) solid transparent;
				border-bottom: ($_btH/3) solid transparent;
				// center the triangle
				@include horizontal-vertical-center;

				transition: border-color 0.5s;
			}
			
			// hover
			&:hover:before{
				border-left-color:  $controlHoverColor;
			}
		}
		
		// the shape of the pause button likes "||"
		&.pause{
			//Distinguish .pause:after from .play:before.  
			//If two button use same pseudo element, there is a switching play over pause animation when button is hover at the same time.
			&:after{
				content: "";
				position: absolute;
				border: ($_btH / 6) solid $controlNormalColor;
				border-width: 0 ($_btH / 6); 

				width: ($_btH / 2);
				height: ($_btH * 0.6);
				background: transparent;
				// center the ||
				@include horizontal-vertical-center;

				transition: border-color 0.5s;
			}

			//hover
			&:hover:after{
				border-color: $controlHoverColor;
			}
		}// pause
		
		//NO USE: older play and pause button implement
		/*
		#{$prefix}play{
			position: absolute;
			// draw the triangle
			border-left:  ($_btH/2) solid $controlNormalColor;
			border-top: ($_btH/3) solid transparent;
			border-bottom: ($_btH/3) solid transparent;
			// center the triangle
			@include horizontal-vertical-center;

			transition: border-color 0.5s;
			// hover
			// &:hover{
			// 	border-left-color:  $controlHoverColor;
			// }
		}
		#{$prefix}pause{
			content: "";
			position: absolute;
			border: ($_btH / 6) solid $controlNormalColor;
			border-width: 0 ($_btH / 6); 

			width: ($_btH / 2);
			height: ($_btH * 0.6);
			background: rgba(255,255,255,0);
			// center the ||
			@include horizontal-vertical-center;

			transition: border-color 0.5s;
		}
		// hover play button
		&:hover{
			#{$prefix}play {
				border-left-color:  $controlHoverColor;
			}
			#{$prefix}pause {
				border-color: $controlHoverColor;
			}
		} */
	}// end play and pause button

	&progress-bar {
		position: relative;
		margin: 0;
		width: 240px;
		height: $_btH;

		display:inline-block;
		background: $controlbackgroundColor;

		// remove some strange blank(??inline-block)
		font-size: 0; // Why???
		// the progress which represents for video duration
		.total {
			width:  90%;
			height: ($_btH / 4);

			margin: ($_btH * 0.375) auto 0;
			cursor: pointer;
			background: $controlNormalColor;

			.current {
				width: 0%;
				height: ($_btH / 4);
				background: $controlHoverColor;

				border-right: 1px solid rgb(0,140,255);//TODO
			}
		}
	}// end progress bar

	&mute-button {
		width: $_btH;
		height: $_btH;
		cursor: pointer;

		position: relative;
		display:inline-block;
		background: $controlbackgroundColor;

		#{$prefix}unmute-status {
			// draw 
			position: absolute;
			border-right:  ($_btH/2) solid $controlNormalColor;
			border-top: ($_btH/3) solid transparent;
			border-bottom: ($_btH/3) solid transparent;
			@include horizontal-vertical-center;
			transition: border-color $_tSec;

			&:before {
				content: "";
				position: absolute;
				width: ($_btH/4);
				height: ($_btH/4);
				top: -($_btH/8);
				background: $controlNormalColor;
				transition: background-color $_tSec;
			}

			&:after {
				content: "";
				position: absolute;
				border-top: 3px dotted transparent;
				width: $_btH * 1.1;

				left: -($_btH * .25);
				top: -1px;
				transform:rotate(-45deg);
				transition: border-color $_tSec,opacity $_tSec;
			}

			&:hover{
				/* border-right-color: $controlHoverColor;
				&:before {
					background: $controlHoverColor;
				} */
				// splice line show up
				&:after {
					border-top-color: rgba($controlHoverColor, 0.5);
				}
			}
		}

		#{$prefix}mute-status {
			position: absolute;
			border-right:  ($_btH/2) solid $controlNormalColor;
			border-top: ($_btH/3) solid transparent;
			border-bottom: ($_btH/3) solid transparent;
			@include horizontal-vertical-center;
			transition: border-color $_tSec;

			&:before {
				content: "";
				position: absolute;
				width: ($_btH/4);
				height: ($_btH/4);
				top: -($_btH/8);
				background: $controlNormalColor;
				transition: background-color $_tSec;
			}

			&:after {
				content: "";
				position: absolute;
				border-top: 3px solid $controlNormalColor;
				width: $_btH * 1.1;

				left: -($_btH * .25);
				top: -1px;
				transform:rotate(-45deg);
				transition: border-top-color $_tSec;
			}

			&:hover{
				border-right-color: $controlHoverColor;

				&:before {
					background: $controlHoverColor;
				}
				&:after {
					border-top-color: rgba($controlNormalColor ,0.3);
				}
			}
		}
	}// end mute button

	&volume-bar{
		@extend #{$prefix}progress-bar;
		width: 80px;

		&.grey{
			.total .current{
				background-color: $controlInactiveColor;
			}
		}
	}// end volumn bar

	/* &fullscreen-button{
		position: relative;

		border: ($_btH / 10) solid transparent;
		width: $_btH;
		height: $_btH;
		display:inline-block;
		background: $controlbackgroundColor;

		overflow: hidden;

		#{$prefix}full{
			width:100%;
			height:100%;
			border: ($_btH / 15) solid $controlNormalColor;
			transition: border-color 0.5s;

			&:before{
				content: "";
				position: absolute;
				background: $controlNormalColor;

				width: 120%;
				height: 20%;
				//center and middle element and rotate 45 degree
				top: 50%;
				left: 50%;
				transform: translateX(-50%) translateY(-50%) rotate(45deg);

				transition: all 0.5s;
			}
			// hover fullscreen button
			&:hover{
				border-color: $controlHoverColor;

				&:before {
					height: 75%;
					// width: 75%;
					background: $controlHoverColor;
				}
			}
		}
	} */

	&fullscreen-button{
		position: relative;

		border: ($_btH / 10) solid transparent;
		width: $_btH;
		height: $_btH;
		display:inline-block;
		background: $controlbackgroundColor;

		overflow: hidden;

		&.full{
			&:after {
				content: "";
				display: block;
				width: ($_btH * 0.8);
				height: ($_btH * 0.8);
				border: ($_btH * 0.1) solid $controlNormalColor;
				transition: border-color $_tSec;
			}

			&:before{
				content: "";
				position: absolute;
				background: $controlNormalColor;

				width: 120%;
				height: 20%;
				//center and middle element and rotate 45 degree
				top: 50%;
				left: 50%;
				transform: translateX(-50%) translateY(-50%) rotate(45deg);

				transition: all $_tSec;
			}

			// hover fullscreen button
			&:hover{
				&:after{border-color: $controlHoverColor;}

				&:before {
					height: 75%;
					// width: 75%;
					background: $controlHoverColor;
				}
			}
		}

		&.exit{
			&:before,&:after {
				content: "";
				position: absolute;

				width: ($_btH * 0.6);
				border-width: ($_btH / 5);
				border-style: solid;
				border-color: transparent $controlNormalColor; 

				top: 50%;
				left: 50%;
				transform: translateX(-50%) translateY(-50%) rotate(-45deg);

				transition: all $_tSec;
			}
			&:after {
				transform: translateX(-50%) translateY(-50%) rotate(45deg); //override
			}
			
			&:hover{
				&:before,&:after{
					border-color: $controlHoverColor;
					border-width: ($_btH * 0.1);
					height:  ($_btH * 0.6);
					transform: translateX(-50%) translateY(-50%);
				}
			}
		}
	}
}

